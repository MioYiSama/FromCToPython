=== 默认值

Python的函数参数可以有默认值。
当不指定参数的值时，参数取默认值。
比如：

#rect[
  ```py
  def f(x=1):
    return x

  f() # 返回1
  f(0) # 返回0
  ```
]

注：没有默认值的参数必须全都在有默认值的参数前面

=== 传递参数

==== 位置参数

在C语言里，实际参数和形式参数是根据*位置*和*顺序*一一对应的：

#rect[
  ```c
  void f(int x, int y, int z);
  f(1, 2, 3); // 1对应x，2对应y，3对应z
  ```
]

在Python里，这样的参数叫做*位置参数*（Positional Argument）

==== 关键字参数

在Python里还有一种参数叫*关键字参数*（Keyword Argument）：

#rect[
  ```py
  def f(x, y, z):
    pass

  f(x=1, y=2, z=3)
  ```
]

即通过#quote[`形式参数名 = 实际参数`]的方式传递参数

=== 变长参数

有的时候，一个函数的参数的数量并不固定（就像C语言的`printf`），这个时候就需要变长参数。

变长参数同时支持位置参数和关键字参数，它们可以接收任意数量的参数。变长的位置参数需要在参数前添加一个星号，变长的关键字参数需要在参数前添加两个星号，比如：

#rect[
  ```py
  def f(*args, **kwargs):
    pass

  f(1, 2, x=1, y=2, z=3)
  ```
]

其中：

- `*args`为元组。例子中`args`为`(1, 2)`

- `**kwargs`为字典。例子中`kwargs`为`{'x': 1, 'y': 2, 'z': 3}`
